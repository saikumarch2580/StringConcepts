
package Selenium.TestOne;

import java.time.Duration;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import org.jspecify.annotations.Nullable;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.NoAlertPresentException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;



public class BaseClass {
	
	String ActualPartName="";
	String ActualInvoiceNumber="";
	String DefaultInvoiceNumber ="";
	
	WebDriver driver;
	
	public void login(WebDriver driver) throws Exception { 
		
		 driver.findElement(By.id("userName_login")).sendKeys("masters");
		 driver.findElement(By.id("password_login")).sendKeys("Sairam@123"); 
		 handleUnexpectedAlert(driver);
		 driver.findElement(By.xpath("//button[text()='Continue']")).click();
		 
	}
	public void ClickOnMenuButton(WebDriver driver) throws Exception {
		 driver.findElement(By.xpath("//img[@id='sideLogo_img']")).click();
		 Thread.sleep(2000); 
	}
	
	   
	public void OpenInward(WebDriver driver) throws Exception {
	    
		
		
		WebElement partsInward =driver.findElement(By.xpath("//div[@id='style-1']//following-sibling::li[@id='partsOpen']"));
		partsInward.click();
		handleUnexpectedAlert(driver);
		Thread.sleep(2000);
		driver.findElement((By.xpath("//div[@class='scrollbar']//following::li[@id='partsOpen']//following::li[2]"))).click();
		
	}

	public void CompareTitle(WebDriver driver, String ActualTitleName) {
		
		 String Title = driver.getTitle();
		 System.out.println("Titile name is " + Title);
		 String TitleName = ActualTitleName; 
		 if(Title.equals(TitleName)) {
			 Assert.assertTrue(true);
			 System.out.println("It is:" +ActualTitleName+ " screen"); 
		 }
		
		 
	}
	  
	       
public void CheckboxCheckandUncheck(WebDriver driver) throws Exception {
	
  Thread.sleep(2000);
  driver.findElement(By.xpath("(//div[@class='icheckbox_square-blue']//following::ins)[1]")).click();
  driver.findElement(By.xpath("(//div[@class='icheckbox_square-blue']//following::ins)[1]")).isSelected();
  
}

public void VendorDetailsEntry(WebDriver driver) throws Exception {
	
	driver.findElement(By.xpath("//i[@class='fa fa-plus-square']")).click();
	Thread.sleep(2000);
	driver.findElement(By.xpath("//input[@id='vendorName']")).sendKeys(autogeneratedString());
	
	driver.findElement(By.xpath("//input[@id='mobileNo']")).sendKeys("789999999");
	Thread.sleep(2000);
	driver.findElement(By.xpath("//i[@class='fa fa-times-circle customClose']")).click();
	
	
	
}

public String autogenerateddoubledigitNumber() {
	
	Random ran = new Random();
	
	int num = ran.nextInt(4,9);
	
	String number = Integer.toString(num);
	
	return number;
	
	
}

public String autogenerateNumber() {
    Random rd = new Random();
    int[] a = new int[10];
     
   for (int i = 0; i < 5; i++) {
        a[i] = rd.nextInt(10);
    } 

    // Build the mobile number as a String
    StringBuilder mobileNumber = new StringBuilder();
    for (int i = 0; i < 10; i++) {
        mobileNumber.append(a[i]); 
    }

    System.out.println("The Mobile number is: " + mobileNumber.toString());

    return mobileNumber.toString();  // Return as CharSequence
}
	

public  String autogeneratedString() {
	
	String characters = "abcdefghijklmnopqrstuvwxyz";
	
	int TotalLen = 5;
	
	Random rand = new Random();
	
	StringBuilder sb = new StringBuilder();
	
	for(int i=0; i<TotalLen; i++) {
		
		int newrand = rand.nextInt(TotalLen); 
		System.out.println(newrand); 
		char newchar = characters.charAt(newrand);
		System.out.println(newchar);
	
	  sb.append(newchar);
	}
	
	    //return sb.toString();
	return sb.toString();


	}

public void NavigateToInwardScreen(WebDriver driver) throws Exception {
	ClickOnMenuButton(driver);
	Thread.sleep(2000);
	driver.findElement(By.xpath("(//span[contains(text(),'Stock')])[1]")).click();
	
}

public void excelinward(WebDriver driver, String parts) throws Exception {
	
	
    String OnePart = "SinglePart";
    String MultipleParts = "Multiple";
    
    if(parts.equals(OnePart)) {
    	WebElement Partname =driver.findElement(By.xpath("//input[@id='partname']"));
    	String ActualPartName = autogeneratedString();
        System.out.println("The autogenerated part name is : "+ ActualPartName);
    	Partname.sendKeys(ActualPartName);
    	this.ActualPartName=ActualPartName;
    	driver.findElement(By.id("quantity")).sendKeys("1");
    	driver.findElement(By.id("partprice")).sendKeys("100");
    	Thread.sleep(2000);
		driver.findElement(By.xpath("(//i[@class='fa fa-plus'])[1]")).click();
    	
    	
    	
    }else if(parts.equals(MultipleParts)){
	SeleniumExcel excel = new SeleniumExcel();
	excel.Excelutils("C:\\Users\\Intel\\Desktop\\Partname.xlsx", "Sheet1");
	
	int TotalRows = excel.rowcount(); 
	System.out.println(TotalRows);

	for (int i = 1; i < TotalRows; i++) {

		String partname = excel.getCellCount(i, 0);
		String qty = excel.getCellCount(i, 1); 
		String price = excel.getCellCount(i, 2);
		driver.findElement(By.xpath("//input[@id='partname']")).sendKeys(partname);
		driver.findElement(By.id("quantity")).sendKeys(qty);
		driver.findElement(By.id("partprice")).sendKeys(price);
		Thread.sleep(2000);
		driver.findElement(By.xpath("(//i[@class='fa fa-plus'])[1]")).click();
	
	} 
    }

}
	
 public void partNosEnter(WebDriver driver, String NoOfParts) {
	 
	String SinglePart = "Single";
	String MultipleParts = "Multiple";
	
	if(NoOfParts.equals(SinglePart)) {
		
		driver.findElement(By.xpath("//input[@class='myInput partNumbers ui-autocomplete-input']")).sendKeys(autogenerateddoubledigitNumber());
	} else if(NoOfParts.equals(MultipleParts)){
	
	
	 String[] partNos = {"A123", "B234", "C456", "D444", "E9999", "T3333"};
	 
	 List<WebElement> list = driver.findElements(By.xpath("//input[@class='myInput partNumbers ui-autocomplete-input']"));
	 
	 for(int i=0; i<list.size(); i++) {
		 if(i<partNos.length) {
			 
			 list.get(i).sendKeys(partNos[i]);
			  
		 }
	 }
	 }
	 
	 
 }
 
 public void SellingpriceAdd(WebDriver driver, String Sellingprice) {
	 
	String Oneqty = "Singleqty";
	String Multipleqty = "Multiple";
	
	if(Sellingprice.equals(Oneqty)) {
		
		driver.findElement(By.xpath("//input[@class='validatingdecimal']")).sendKeys("10");
		
	} else if(Sellingprice.equals(Multipleqty)) {
	 
	 List<WebElement> qty = driver.findElements(By.xpath("//input[@class='validatingdecimal']"));
	 
	 String qtyvalue = "10";
	 
	 for(int i = 0; i<qty.size(); i++) {
		  
		 if(1 <qtyvalue.length()) { 
			 
			// driver.findElement(By.xpath("(//div[@class='price_amount selling_input_left']//span)[1]")).click();
			 
			 System.out.println(qtyvalue);
			  
			 qty.get(i).sendKeys(qtyvalue);
			  
		 } 
	 }
		 
	 }
 }
 
 
 public void moverightside(WebDriver driver) {
	 
	 driver.findElement(By.id("discountTotal")).click();
	 driver.findElement(By.xpath("//th[contains(text(),'Selling Price') ]")).click();
	 
	
	 
 }

 public void clicksubmittButton(WebDriver driver) {
	 
	 driver.findElement(By.id("inwardButtonId")).click();
 }
 
 public void EnterBillNo(WebDriver driver) {
	 
	 driver.findElement(By.xpath("//input[@id='deliveryChallan']")).sendKeys(autogenerateddoubledigitNumber());
 }

 public void SelectCalender(WebDriver driver) {
	 
	 //calanderdate select
	 driver.findElement(By.xpath("(//span[@class='input input--nao']//input[2])[1]")).click();
	 driver.findElement(By.xpath("/html/body/div[7]/div[2]/div/div[2]/div/span[6]")).click();
 }
 
 public void checkThePaymentsTabIsDisplayedorNot(WebDriver driver) {
	 
	  WebElement PaymentsTab = driver.findElement(By.xpath("//a[text()='Payments']"));
	  
	  if(PaymentsTab.isDisplayed()) {
		  
		  driver.findElement(By.xpath("(//button[@class='close'])[3]")).click();
	  }
	 
 } 
 
 public void refresh() {
	 
	 driver.navigate().refresh();
 } 
 
	public ArrayList<WebElement> StorePartDetails(WebDriver driver) {

		ArrayList<WebElement> storeElement = new ArrayList<>();

		storeElement.add(driver.findElement(By.xpath("//td[@class='part_no active_row']")));
		storeElement.add(driver.findElement(By.xpath("//td[@class='qoh active_row']")));

		for (WebElement elements : storeElement)
			System.out.println("Array list elements are " + elements.getText());
		return storeElement;
	 
	  
 }
 
 public void CheckStockDetails(WebDriver driver, String singleOrMultiple) throws Exception { 
	 
	 String single ="Single";
	 String multiple = "Multiple";
	 
	 if(singleOrMultiple.equals(single)) { 
		 Thread.sleep(2000);
		 WebElement SinglePartName = driver.findElement(By.xpath("//input[@id='searchText'] "));
		 SinglePartName.click();
		 SinglePartName.sendKeys(ActualPartName);
		 StorePartDetails(driver);		
		 Thread.sleep(2000);
		 SinglePartName.clear();
		 
		 
	 } else if(singleOrMultiple.equals(multiple)) {
	 SeleniumExcel excel = new SeleniumExcel();
	 excel.Excelutils("C:\\Users\\Intel\\Desktop\\Partname.xlsx", "Sheet1");	
		int TotalRows = excel.rowcount(); 
		System.out.println(TotalRows);
		for (int i = 1; i < TotalRows; i++) {
			String partname = excel.getCellCount(i, 0); 
			Thread.sleep(2000);
			WebElement PartNames = driver.findElement(By.xpath("//input[@id='searchText'] "));
			PartNames.sendKeys(partname);
			StorePartDetails(driver);		
			Thread.sleep(2000);
			PartNames.clear();
			
		}
		}
 }	
 public void NavigateToSellProducts(WebDriver driver) {
	 
	 driver.findElement(By.xpath("//img[@class='halfLogo']")).click();	 
	 driver.findElement(By.xpath("//span[contains(text(),'Sell Products')]")).click();
	 
 }
 
 public void sellProductsButtonclick(WebDriver driver) {
	
	 driver.findElement(By.xpath("//button[@class='btn btn-primary sellProducts titleBar']")).click();
 } 
 
 public void selectSellProductParts(WebDriver driver, String singlepart) throws Exception {
	 
	 String single = "SinglePart";
	 String multipleParts = "Multiple";
	 if(singlepart.equals(single)) {
		 driver.findElement(By.xpath("//input[@id='searchText_all']")).sendKeys(ActualPartName);
		 Thread.sleep(3000);
		 driver.findElement(By.xpath("(//ins[@class='iCheck-helper'])[1]")).click();
		 Thread.sleep(1000);
	 } else if(singlepart.equals(multipleParts)) { 
	 SeleniumExcel excel = new SeleniumExcel();
	 excel.Excelutils("C:\\Users\\Intel\\Desktop\\Partname.xlsx", "Sheet1");	
		int TotalRows = excel.rowcount(); 
		System.out.println(TotalRows);
		for (int i = 1; i < TotalRows; i++) {
			String partname = excel.getCellCount(i, 0); 
			Thread.sleep(2000);
			WebElement PartNames = driver.findElement(By.xpath("//input[@id='searchText_all']"));
			PartNames.sendKeys(partname);
			Thread.sleep(2000);
			driver.findElement(By.xpath("(//ins[@class='iCheck-helper'])[1]")).click();			
			PartNames.clear();
		
		}
	 }
		
		
 }
 
 public void removetheExistingQtyAndAddNewQty(WebDriver driver) {
	 
	 WebElement Part1 = driver.findElement(By.xpath("//input[@type='number' and @class='decimalvalidation' and @id='qty1_IMPORTOILFILTERT3333search_0']"));
	 
	 String decimal = driver.findElement(By.xpath("//input[@type='number' and @class='decimalvalidation' and @id='qty1_IMPORTOILFILTERT3333search_0']")).getDomAttribute("value");
	 
	 String decimal1 = "1.00";
	 
	 if(decimal==decimal1) {
		 Part1.clear();
		 Part1.sendKeys(autogenerateddoubledigitNumber());
		 
		 
		 
	 }
	 
         
           
 }
 
 public void handleUnexpectedAlert(WebDriver driver) {
	    try {
	        // Switch to alert
	        Alert alert = driver.switchTo().alert();

	        // Print the alert message (optional)
	        System.out.println("Alert detected: " + alert.getText());

	        // Accept the alert
	        alert.accept();
	        
	    } catch (NoAlertPresentException e) {
	        // No alert found, continue as normal
	        System.out.println("No alert present, continuing...");
	    }
	}
	 
 public void Click_NextButton(WebDriver driver) {
	 
	 
	 driver.findElement(By.id("statusDone")).click();
	 
 }
 
 public void EnterSellProductsCustomerDetails(WebDriver driver) throws Exception{
	 
	 Thread.sleep(2000);
	 driver.findElement(By.xpath("//input[@id='customer_name']")).sendKeys(autogeneratedString());
	 driver.findElement(By.xpath("//input[@id='mobile_no']")).sendKeys("796666566");
 }
 
 public void TheFinalNextButton(WebDriver driver) {
	 
	 driver.findElement(By.id("proformaInvoiceNext")).click();
 }
	public void CheckTheConfirmationpopupIsdisplayingOrNot(WebDriver driver) throws Exception {
		
		Thread.sleep(2000);
		String popup ="Confirmation For Stock Deduction";
		String Confirmationpopup = driver.findElement(By.xpath("//h4[contains(text(),'Confirmation For Stock Deduction')]")).getText();
		if(popup.equals(Confirmationpopup)) {
			driver.findElement(By.xpath("(//button[text()='Yes'])[2]")).click();
		} else {
			System.out.println("Confirmation is not displaying");
		}
		
	}
	
	public void CreateInvoiceButtonIsDisplayingOrNot(WebDriver driver)
	{
		String CreateInvoiceButton = "Create Invoice";
		String actualCreateInvoiceButton = driver.findElement(By.id("createInvoice")).getText();
		System.out.println("Create Invoice button name is : " + actualCreateInvoiceButton );
		
		if(CreateInvoiceButton.equals(actualCreateInvoiceButton)) {
			 
			Assert.assertEquals(CreateInvoiceButton, actualCreateInvoiceButton);
			System.out.println("Create button is displaying");
			
		} else {
			System.out.println("Create button is not displaying");
		}
		
		
	}
	public void CreateInvoiceButton(WebDriver driver) {
		
		driver.findElement(By.id("createInvoice")).click();
	}
	
	public void inwardCheckAfterCreatingTheInvoice(WebDriver driver) throws Exception {
		
		
		NavigateToInwardScreen(driver);
		CheckStockDetails(driver, "Single");
		
		
	}
	
	public void CancelInvoiceVisableOrNot(WebDriver driver) {
		
		WebElement CancelInvoice = driver.findElement(By.id("proformaBack"));
		CancelInvoice.isDisplayed();
		if(CancelInvoice.isDisplayed()) {
			
		Assert.assertTrue(true);
		System.out.println("Cancel invoice button is displayed");
		}else {
			System.out.println("Cancel invoice button is not displayed");
		}
	
	}
	
	public void CheckDecreaseTheQty(WebDriver driver, String singleOrMultiple) throws Exception {
		
		String single ="Single";
		String Multiple = "Multiple";
		
		if(singleOrMultiple.equals(single)) {
			
		WebElement MinusButton = driver.findElement(By.xpath("//img[@id='minus1']"));
		if(MinusButton.isDisplayed()) {
			MinusButton.click();
			Assert.assertTrue(true);
		}else {
			System.out.println("Button is clicking. It is not correct");
		}
		} else {
		
		
		List<WebElement> minus = driver.findElements(By.id("minus1"));
		
		for(WebElement ClickMinus :minus) {
		
			if(ClickMinus.isDisplayed()){
				Thread.sleep(1000);
				ClickMinus.click();
				System.out.println("Minus is not clickable. It is correct");	
			} else {
				System.out.println("Button is clicable which is not correct");
			}
		}
		}
		
	} 
	
	public void CheckDeleteButtonAfterInvoice(WebDriver driver, String SingleOrDouble) throws Exception {
		
		String single ="Single";
		String Multiple = "Multiple";
		if(SingleOrDouble.equals(single)) {
			
			WebElement DeleteButton = driver.findElement(By.xpath("//i[@class='fa fa-trash-o']"));
			if(DeleteButton.isDisplayed()) {
				DeleteButton.click();
				Assert.assertTrue(true);
				
			}else {
				
				System.out.println("Delete button is clicking which is not correct");
			}
		} else if(SingleOrDouble.equals(Multiple)) {
		List<WebElement> DeleteButton = driver.findElements(By.className("fa fa-trash-o"));
		
		for(WebElement DeleteButtons: DeleteButton) {

			if(DeleteButtons.isDisplayed()) {
				DeleteButtons.click();
				Thread.sleep(2000);
				System.out.println("Delete Button is displaying");
				Assert.assertTrue(true);
			} else {
				System.out.println("Delete Button is not displaying");
				Assert.assertTrue(false);
			}
		}
	}
	}
	public void checkThePartsareEditableAfterInvoice(WebDriver driver) throws Exception {
		CheckDeleteButtonAfterInvoice(driver, "Single");
		CheckDecreaseTheQty(driver, "single");
		GetInvoiceNumberofCurrentSellproductJobcard(driver);
		
		
	}
	
	public void GetInvoiceNumberofCurrentSellproductJobcard(WebDriver driver) {
		
		WebElement InvoiceNumber = driver.findElement(By.xpath("(//ul[@class='bill_set']//input)[1]"));
		@Nullable
		String ActualInvoiceNumber = InvoiceNumber.getAttribute("value");
		System.out.println("The actualInvoice number is: "+ ActualInvoiceNumber);
		
		this.ActualInvoiceNumber = ActualInvoiceNumber;
	}
	
	public void IssueCreditNote(WebDriver driver) throws Exception {
		
		String Expected ="Credit Note - Autorox";
		String actualTitle = driver.getTitle();
		
		if(!Expected.equals(actualTitle)) {
			
			NavigateToCreditNote(driver);
		} else {
			
			NavigateToCreditNote(driver);

		}

	}
	
	public void NavigateToCreditNote(WebDriver driver) throws Exception {
		
		ClickOnMenuButton(driver);
		Thread.sleep(1000);
		driver.findElement(By.xpath("//span[contains(text(),'Credit & Debit Note')] ")).click();
		Thread.sleep(1000);
		driver.findElement(By.xpath("//li[@id='creditOption']//a")).click();
		String CurrentPage = driver.getTitle();
		System.out.println("Current page is :"+ CurrentPage );
	}
	
	public void EnterCreditNoteNumber(WebDriver driver) throws Exception {
		
		
		WebElement Text = driver.findElement(By.xpath("//input[@class='form-control']"));
		
		Text.sendKeys(ActualInvoiceNumber);
		Thread.sleep(5000);
		driver.findElement(By.xpath("//div[@class='search_dropdown']")).click();
		
	} 
	
	public void CheckTheCreditNotePartName(WebDriver driver) {
		Actions ac = new Actions(driver);
		
		
		/*WebElement creditNotePartName = driver.findElement(By.xpath("//td[@role='cell'][3]//span"));
		
		String Partname = creditNotePartName.getText();
		System.out.println("Credit note actualpartname is :"+Partname); */
		
			
			 WebElement CheckBox = driver.findElement(By.xpath("//input[@class='custom-control-input']"));
			ac.moveToElement(CheckBox).click().build().perform();
	}
	public void creditNoteIssueButton(WebDriver driver) throws Exception {
		 
		Thread.sleep(6000);
	/*	WebElement IssueButton = driver.findElement(By.xpath("(//button[@type='button'])[8]"));
		IssueButton.click(); */
		
		JavascriptExecutor jse = (JavascriptExecutor)driver;
		jse.executeScript("document.getElementsByTagName('Button')[8].click();"); 
				
	}
	
	public void CheckTheInvoiceStatusJobCardAndPickItInSellProductsDashBoard(WebDriver driver) {
		
		String invoice = "Invoice";
		
		List<WebElement> TotalRows = driver.findElements(By.xpath("//tbody//tr"));
		
		
		WebElement[] rowsArray = new WebElement[TotalRows.size()];
		
		
		for(int i=0; i<TotalRows.size(); i++) {
			
			rowsArray[i]= TotalRows.get(i);
			
			List<WebElement> TotalCells = rowsArray[i].findElements(By.tagName("td"));
			WebElement[] cellsArray = new WebElement[TotalCells.size()];
			
		
			for(int j=0; j<TotalCells.size(); j++) { 
				
				cellsArray[j] = TotalCells.get(j);
				
				
				System.out.println("The eachcell is : "+ cellsArray[j].getText()); 
			
				
			if(cellsArray[j].getText().equalsIgnoreCase("invoice")) {
				
				System.out.println("The invoice number is :"  + cellsArray[4].getText());
				
				String DefaultInvoiceNumber =cellsArray[4].getText();
				
				this.DefaultInvoiceNumber =DefaultInvoiceNumber;
				//cellsArray[4].click();
				
				return;
			
				
		} 
			
			
	}

	 
}
		
}
	public void AddPartsForTempCreditNote(WebDriver driver) throws Exception {
		
WebElement Text = driver.findElement(By.xpath("//input[@class='form-control']"));

        Thread.sleep(2000);		
		Text.sendKeys(DefaultInvoiceNumber);
		Thread.sleep(8000);
		
	  WebElement   Dropdown = driver.findElement(By.xpath("//input[@class='form-control']//following::span//span"));
		
	  Dropdown.click();
	}
	public void SelectPartsInCreditNote(WebDriver driver, String SingleOrMultiple) throws Exception {
		String single = "single";
		String multiple = "Multiple";
		if(SingleOrMultiple.equals(single)) {
		Thread.sleep(5000);
		WebElement Checkbox = driver.findElement(By.xpath("//label[@class='custom-control-label']"));
		JavascriptExecutor js = (JavascriptExecutor)driver;
		js.executeScript("document.getElementsByClassName('custom-control-input')[1].click();");
		/*js.executeScript("arguments[0].click();", Checkbox); */
		}else if(SingleOrMultiple.equals(multiple)) {
			Thread.sleep(5000);
		        List<WebElement> rowsInCreditNote = driver.findElements(By.xpath("//tbody//tr[@role='row']"));
		        
		        for(int i=0; i<rowsInCreditNote.size()-2; i++) {
		        	
		        	WebElement Checkbox = driver.findElement(By.xpath("//label[@class='custom-control-label']"));
		    		JavascriptExecutor js = (JavascriptExecutor)driver;
		    		js.executeScript("document.getElementsByClassName('custom-control-input')["+i+"].click();");
		        	Thread.sleep(1000);
		        }
			
		
		}
	
	}
	

	
	public void NavigateToTempCreditNote(WebDriver driver) throws Exception {
		IssueCreditNote(driver);
		AddPartsForTempCreditNote(driver);
		SelectPartsInCreditNote(driver, "Multiple");
		creditNoteIssueButton(driver);
		
	}
	 
	
}	
	
	
	
	
	

	 
	
 
 
 
 
 
 
 

	







